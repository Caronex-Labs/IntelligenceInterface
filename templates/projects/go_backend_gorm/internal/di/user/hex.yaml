# Configuration used to generate this dependency injection file
# Generated by: gohex engine
# Template: internal/di/{{DOMAIN}}/di.go.tmpl
# Domain: user
# Entity: User

layer: "dependency_injection"
domain: "user"
entity: "User"

# Dependency injection configuration
dependency_injection:
  function_name: "RegisterUser"
  description: "Registers all user components in the dependency injection container"
  package: "user"
  
  # Components to register (in dependency order)
  components:
    - layer: "entity"
      description: "Entity creation typically handled by repository or use case"
      registration: "none"  # Entities are value objects, not services
      reason: "Entities are created by repositories/use cases, not DI container"
      
    - layer: "repository"
      description: "Register user repository"
      package: "repositoryPkg"
      registration_function: "RegisterUserRepository"
      order: 1
      
    - layer: "use_case"
      description: "Register user use case"
      package: "usecasePkg"
      registration_function: "RegisterUserUseCase"
      order: 2
      depends_on: ["repository"]
      
    - layer: "handler"
      description: "Register user handler"
      package: "handlersPkg"
      registration_function: "RegisterUserHandler"
      order: 3
      depends_on: ["use_case"]

# Registration order configuration
registration_order:
  strategy: "dependency_based"
  layers: ["repository", "use_case", "handler"]
  
  # Dependency relationships
  dependencies:
    repository: []
    use_case: ["repository"]
    handler: ["use_case"]

# Imports configuration
imports:
  - alias: "handlersPkg"
    package: "go_backend_gorm/internal/interface/http/handlers/user"
    
  - alias: "repositoryPkg"
    package: "go_backend_gorm/internal/repository/user"
    
  - alias: "usecasePkg"
    package: "go_backend_gorm/internal/usecase/user"

# Template variables used during generation
template_vars:
  domain: "user"
  domain_snake: "user"
  entity: "User"
  entity_snake: "user"
  entities: "Users"
  entities_snake: "users"
  module: "go_backend_gorm"

# Generation metadata
generation:
  template_file: "internal/di/{{DOMAIN}}/di.go.tmpl"
  output_file: "internal/di/user/di.go"
  generated_at: "2024-12-20T10:30:00Z"
  generator_version: "1.0.0"
  preserve_custom_code: true

# Custom code regions (for code preservation)
custom_regions:
  - name: "custom_components"
    marker: "// Register custom components here"
    description: "Add registration for domain-specific components"
    location: "after_standard_registration"
    
  - name: "custom_middleware_registration"
    marker: "// Register custom middleware here"
    description: "Add domain-specific middleware registration"
    location: "after_handler_registration"
    
  - name: "custom_dependencies"
    marker: "// Register custom dependencies here"
    description: "Add domain-specific external dependencies"
    location: "before_standard_registration"
